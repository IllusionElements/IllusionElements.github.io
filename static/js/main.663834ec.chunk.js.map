{"version":3,"sources":["components/SendMessage/index.js","flat.js","client.js","index.js"],"names":["AUTH_TOKEN","_callee","body","url","headers","res","_mnt_c_Users_Aaron_Downloads_test_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","URL","Headers","append","pathname","fetch","method","sent","abrupt","text","t0","stop","this","__webpack_exports__","_useState","useState","_useState2","Object","_mnt_c_Users_Aaron_Downloads_test_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","message","setMessage","_useState3","_useState4","error","setError","onChange","e","target","value","onSubmit","length","post","catch","err","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","path","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","container","direction","alignItems","spacing","Boolean","item","xs","label","multiline","onClick","variant","color","Array","prototype","flat","flatMap","assign","_this","levels","arguments","undefined","map","reduce","arr","el","concat","some","isArray","call","callback","thisArg","client","ApolloClient","uri","createContext","Messages","lazy","__webpack_require__","then","bind","default","Fallback","react_default","Message","props","Suspense","fallback","theme","createMuiTheme","palette","primary","purple","secondary","green","typography","useNextVariants","App","withStyles","display","flexWrap","textField","marginLeft","unit","marginRight","width","dense","marginTop","menu","styled","index_es","alignContent","align","Main","console","_this$props","c","t","react_apollo_browser_umd","styles","BrowserRouter","baseName","Switch","Route","component","exact","SendMessage","React","Component","rootElement","document","getElementById","ReactDOM","render","src_Main"],"mappings":"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","file":"static/js/main.663834ec.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { TextField, Button, Grid } from \"@material-ui/core\"\nimport { Route } from \"react-router-dom\"\nconst AUTH_TOKEN =\n  \"Bearer {hnoTw/mdpqRnLF5ZOgbOSsslUqgugctZynwvgREwNIJXgbNjIR3rF9svIXbtIVL5tjUi2lMqXoMIjT9ZoVZXcLatlL8fA8LSXPuRgB5889grrHHmYoRHIvrdqPKV7UQc+QXmzXZZUgulGnstaW+dDwdB04t89/1O/w1cDnyilFU= }\"\nasync function post(body) {\n  const url = new URL(\"https://linebot--illusionelement.repl.co\")\n  const headers = new Headers()\n  headers.append(\"auth\", AUTH_TOKEN)\n  url.pathname = \"broadcast\"\n\n  try {\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers,\n      body,\n    })\n    return res.text()\n  } catch (e) {\n    return e\n  }\n}\nexport default () => {\n  const [message, setMessage] = useState(\"\")\n  const [error, setError] = useState(false)\n  function onChange(e) {\n    setMessage(e.target.value)\n  }\n\n  function onSubmit() {\n    if (message.length < 500 && !error) {\n      setError(true)\n    } else if (message.length > 500) {\n      setError(error ? false : error)\n      post({ message }).catch(err => setError(err.message))\n    }\n  }\n\n  const renderGrid = () => (\n    <Grid container direction=\"column\" alignItems=\"center\" spacing={16}>\n      {!!error && typeof error !== Boolean && error}\n      <Grid item xs={6}>\n        <TextField\n          onChange={onChange}\n          value={message}\n          label=\"send message\"\n          multiline\n        />\n      </Grid>\n      <Grid xs={6} item>\n        <Button onClick={onSubmit} variant=\"contained\" color=\"secondary\">\n          Submit\n        </Button>\n      </Grid>\n    </Grid>\n  )\n\n  return <Route path=\"/send\">{renderGrid}</Route>\n}\n","if (!Array.prototype.flat || !Array.prototype.flatMap) {\n  Object.assign(Array.prototype, {\n    flat(levels = 1) {\n      const map = () => this.reduce((arr, el) => arr.concat(el), [])\n\n      if (levels <= 0) return this\n      if (levels === 1) return map()\n      if (levels > 10 && !this.some(Array.isArray)) return this\n      return this.flat.call(map(), levels - 1)\n    },\n    flatMap(callback, thisArg = this) {\n      return this.map(callback, thisArg).flat(1)\n    },\n  })\n}\n","import ApolloClient from \"apollo-boost\"\nimport { createContext } from \"react\"\nimport { ApolloConsumer } from \"react-apollo\"\nconst uri = \"https://07z08vkv95.lp.gql.zone/graphql\"\nconst Client = new ApolloClient({ uri })\nexport default Client\n\nconst ApolloContext = createContext()\n\nexport const withClient = React => <ApolloConsumer />\n\nexport const context = klass => {\n  klass.contextType = ApolloContext\n}\n","import React, { lazy } from \"react\"\nimport { ApolloProvider } from \"react-apollo\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport {\n  Typography,\n  CssBaseline,\n  withStyles,\n  Grid,\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core\"\nimport purple from \"@material-ui/core/colors/purple\"\nimport green from \"@material-ui/core/colors/green\"\nimport client from \"./client\"\nimport SendMessage from \"./components/SendMessage\"\nimport \"./styles.css\"\nimport \"./flat\"\n\nconst Messages = lazy(() =>\n  import(\"./components\").then(a => ({\n    default: a.default,\n  }))\n)\nconst Fallback = <h1>...Loading</h1>\n\nconst Message = props => (\n  <React.Suspense fallback={Fallback}>\n    <Messages {...props} />\n  </React.Suspense>\n)\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: green,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nconst styled = withStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}))\n\nconst App = styled(() => {\n  return (\n    <Grid\n      alignContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n      spacing={40}\n      container\n    >\n      <Grid xs={12} item>\n        <Typography variant=\"h4\" align=\"center\">\n          Welcome To WD\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n})\nclass Main extends React.Component {\n  componentDidCatch(e) {\n    console.error(e)\n  }\n\n  render() {\n    const { client: c, theme: t } = this.props\n    return (\n      <ApolloProvider client={c}>\n        <MuiThemeProvider theme={t}>\n          <CssBaseline />\n          <React.Suspense fallback={Fallback}>\n            <Router baseName=\"/\">\n              <Switch>\n                <Route path=\"/\" component={App} exact />\n                <Route path=\"/messages\" component={Message} />\n                <Route path=\"/send\" component={SendMessage} />\n              </Switch>\n            </Router>\n          </React.Suspense>\n        </MuiThemeProvider>\n      </ApolloProvider>\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<Main client={client} theme={theme} />, rootElement)\n"],"sourceRoot":""}